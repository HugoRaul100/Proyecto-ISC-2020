/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.5 		*/
/*  Created On : 15-may.-2020 10:56:08 p. m. 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */

SET FOREIGN_KEY_CHECKS=0 
;

/* Drop Tables */

DROP TABLE IF EXISTS `categorías` CASCADE
;

DROP TABLE IF EXISTS `clientes` CASCADE
;

DROP TABLE IF EXISTS `detalle_facturas` CASCADE
;

DROP TABLE IF EXISTS `facturas` CASCADE
;

DROP TABLE IF EXISTS `forma_pago` CASCADE
;

DROP TABLE IF EXISTS `inventarios` CASCADE
;

DROP TABLE IF EXISTS `productos` CASCADE
;

DROP TABLE IF EXISTS `proveedores` CASCADE
;

/* Create Tables */

CREATE TABLE `categorías`
(
	`id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Atributo que registra el identificador de la tabla. ',
	`categoria` ENUM ('Churros', 'Bebidas') NULL COMMENT 'Atributo que registra y especifica la categoría del producto.',
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Tabla que registra los datos de las categorías de productos.'

;

CREATE TABLE `clientes`
(
	`id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Atributo que registra el identificador de la tabla.',
	`nombre_1` VARCHAR(50) NULL COMMENT 'Atributo que registra el primer nombre del cliente.',
	`nombre_2` VARCHAR(50) NULL COMMENT 'Atributo que registra el segundo nombre del cliente.',
	`apellido_1` VARCHAR(50) NULL COMMENT 'Atributo que registra el primer apellido del cliente.',
	`apellido_2` VARCHAR(50) NULL COMMENT 'Atributo que registra el segundo apellido del cliente.',
	`dirección` VARCHAR(255) NULL COMMENT 'Atributo que registra la direccion del cliente.',
	`telefono` VARCHAR(20) NULL COMMENT 'Atributo que registra el número telefonico del cliente.',
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Tabla que registra los datos relacionados a los clientes de la empresa.'

;

CREATE TABLE `detalle_facturas`
(
	`id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Atributo que registra el identificador de la tabla.',
	`factura_id` BIGINT NULL COMMENT 'Atributo que registra y vincula el identificador de la tabla facturas.',
	`producto_id` BIGINT NULL COMMENT 'Atributo que registra y vincula el identificador de los productos con esta tabla.',
	`cantidad_producto` INT NULL COMMENT 'Atributo que registra la cantidad de productos que se venden.',
	`subtotal` FLOAT(6,2) NULL COMMENT 'Atributo que registra el subtotal acumulado de la factura.',
	CONSTRAINT `PK_detalle_facturas` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Tabla que registra datos detallados de las facturas que se emite en la empresa.'

;

CREATE TABLE `facturas`
(
	`id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Atributo que registra el identificador de esta tabla.',
	`fecha` DATE NULL COMMENT 'Atributo que registra la fecha en que se emite la factura.',
	`cliente_id` BIGINT NULL COMMENT 'Atributo que registra y vincula el identificador del cliente para quien se emite la factura.',
	`forma_pago_id` BIGINT NULL COMMENT 'Atributo que registra y vincula ',
	`total` FLOAT(6,2) NULL COMMENT 'Atributo que registra el total a pagar de la factura.',
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Tabla que registra los datos relacionados a las facturas que se emiten en la empresa'

;

CREATE TABLE `forma_pago`
(
	`id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Atributo que registra el identificador de la tabla.',
	`forma_de_pago` ENUM ('Efectivo', 'Tarjeta de credito', 'Tarjeta de debito') NULL COMMENT 'Atributo en el cual se registra la forma en que el cliente realizo el pago por su compra.',
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Tabla que registra datos acerca de la forma en que se realiza el pago para la compra de productos de la empresa.'

;

CREATE TABLE `inventarios`
(
	`id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Atributo que guarda el identificador y es llave primaria de la tabla.',
	`producto_id` BIGINT NULL COMMENT 'Llave foranea que vincula el id del producto con esta tabla.',
	`stock` INT NULL COMMENT 'Atributo que registra la cantidad del producto que se tiene almacenados en espera de su venta.',
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Tabla que registra la información de los productos de la empresa.'

;

CREATE TABLE `productos`
(
	`id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Atributo que registra el identificador y llave primaria de esta tabla.',
	`nombre` VARCHAR(50) NULL COMMENT 'Atributo que registra el nombre del producto.',
	`descripción` VARCHAR(255) NULL COMMENT 'Atributo que registra la descripción de las características del producto.',
	`categoria_id` BIGINT NULL COMMENT 'Atributo en el que se registra y vincula el id de la tabla categorías, siendo llave foranea. ',
	`precio_costo` FLOAT(10,2) NULL COMMENT 'Atributo que registra el precio con el que fue comprado a los proveedores.',
	`precio_venta` FLOAT(10,2) NULL COMMENT 'Atributo que registra el precio de venta del producto.',
	`proveedor_id` BIGINT NULL COMMENT 'Atributo que relaciona ',
	`fecha_ingreso` DATE NULL COMMENT 'Atributo que registra la fecha en que ingresó el producto a la empresa.',
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Tabla que registra los datos acerca de los productos'

;

CREATE TABLE `proveedores`
(
	`id` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Atributo que registra el identificador del proveedor.',
	`nombre_1` VARCHAR(50) NULL COMMENT 'Atributo que registra el primer nombre del proveedor.',
	`nombre_2` VARCHAR(50) NULL COMMENT 'Atributo que registra el segundo nombre del proveedor.',
	`apellido_1` VARCHAR(50) NULL COMMENT 'Atributo que registra el primer apellido del proveedor.',
	`apellido_2` VARCHAR(50) NULL COMMENT 'Atributo que registra el segundo apellido del proveedor.',
	`dirección` VARCHAR(255) NULL COMMENT 'Atributo que registra la dirección del proveedor.',
	`telefono` VARCHAR(20) NULL COMMENT 'Atributo que registra el número telefonico del proveedor.',
	CONSTRAINT `PK_Table1` PRIMARY KEY (`id` ASC)
)
COMMENT = 'Tabla que registra los datos relacionados con los proveedores de la empresa.'

;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE `detalle_facturas` 
 ADD INDEX `IXFK_detalle_facturas_facturas` (`factura_id` ASC)
;

ALTER TABLE `detalle_facturas` 
 ADD INDEX `IXFK_detalle_facturas_productos` (`producto_id` ASC)
;

ALTER TABLE `facturas` 
 ADD INDEX `IXFK_facturas_clientes` (`cliente_id` ASC)
;

ALTER TABLE `facturas` 
 ADD INDEX `IXFK_facturas_forma_pago` (`forma_pago_id` ASC)
;

ALTER TABLE `inventarios` 
 ADD INDEX `IXFK_inventarios_productos` (`producto_id` ASC)
;

ALTER TABLE `productos` 
 ADD INDEX `IXFK_productos_categorías` (`categoria_id` ASC)
;

ALTER TABLE `productos` 
 ADD INDEX `IXFK_productos_proveedores` (`proveedor_id` ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE `detalle_facturas` 
 ADD CONSTRAINT `FK_detalle_facturas_facturas`
	FOREIGN KEY (`factura_id`) REFERENCES `facturas` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `detalle_facturas` 
 ADD CONSTRAINT `FK_detalle_facturas_productos`
	FOREIGN KEY (`producto_id`) REFERENCES `productos` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `facturas` 
 ADD CONSTRAINT `FK_facturas_clientes`
	FOREIGN KEY (`cliente_id`) REFERENCES `clientes` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `facturas` 
 ADD CONSTRAINT `FK_facturas_forma_pago`
	FOREIGN KEY (`forma_pago_id`) REFERENCES `forma_pago` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `inventarios` 
 ADD CONSTRAINT `FK_inventarios_productos`
	FOREIGN KEY (`producto_id`) REFERENCES `productos` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `productos` 
 ADD CONSTRAINT `FK_productos_categorías`
	FOREIGN KEY (`categoria_id`) REFERENCES `categorías` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `productos` 
 ADD CONSTRAINT `FK_productos_proveedores`
	FOREIGN KEY (`proveedor_id`) REFERENCES `proveedores` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

SET FOREIGN_KEY_CHECKS=1 
;
